<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iis on Zachary Loeber</title>
    <link>http://zacharyloeber.com/categories/iis/</link>
    <description>Recent content in Iis on Zachary Loeber</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 26 Sep 2014 19:41:59 +0000</lastBuildDate>
    
	<atom:link href="http://zacharyloeber.com/categories/iis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exchange: Handling Old Log and Other Files</title>
      <link>http://zacharyloeber.com/blog/2014/09/26/exchange-handling-old-log-and-other-files/</link>
      <pubDate>Fri, 26 Sep 2014 19:41:59 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2014/09/26/exchange-handling-old-log-and-other-files/</guid>
      <description>In Exchange old logs can really build up fast. Not database transaction logs but rather temporary transport, client access, IIS, and other debug related crap that typically default to locations either on your system drive or Exchange install path. Of course, Powershell scripting can provide a decent solution for this problem.
Introduction More than any other version, Exchange 2013 seems to like logging information to disk. By default, much of what gets logged will not auto-rotate (or if it does, it happens infrequently) either so you end up with this slow ticking time-bomb in your environment.</description>
    </item>
    
    <item>
      <title>Exchange – The State Of External Client Access</title>
      <link>http://zacharyloeber.com/blog/2012/11/22/exchange-the-state-of-external-client-access/</link>
      <pubDate>Thu, 22 Nov 2012 19:58:04 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2012/11/22/exchange-the-state-of-external-client-access/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Most within the messaging and collaboration industry are hyped up about the next wave of Microsoft collaboration and messaging products which are soon to be released. Among these products is Exchange 2013 RTM. This type of release typically precedes yet another wave of architecture upgrades across the corporate landscape. Some of these (beta testers) will be will undoubtedly upgrade to Exchange 2013.&lt;/p&gt;

&lt;p&gt;Other corporations will start to feel the burn to upgrade as well. These will be organizations which realize that their Exchange &lt;sup&gt;2003&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2007&lt;/sub&gt; infrastructure is nearing a decade old existence and cannot meet the demands of their ever growing mobile workforce. Realizing they are behind the curve, they may feel hastened to upgrade as well, possibly just to Exchange 2010. Regardless the reason in choosing to upgrade their messaging infrastructure, there are critical design decisions which need to be made in how clients access this infrastructure both internally and externally. This article focuses solely on the external access aspect of the infrastructure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange: Automatically Generating Configuration Scripts</title>
      <link>http://zacharyloeber.com/blog/2012/09/29/exchange-automatically-generating-configuration-scripts/</link>
      <pubDate>Sat, 29 Sep 2012 17:33:20 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2012/09/29/exchange-automatically-generating-configuration-scripts/</guid>
      <description>&lt;p&gt;I&amp;#8217;ve started a side project which is born from personally having to redo many aspects of an Exchange migration over and over again. Most of this, I believe, can be automated. Some aspects of this process include exchange server role prerequisite procedures, co-existence configuration, DAG/CAS configuration, and other general reminders and processes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Even More Migration Tips</title>
      <link>http://zacharyloeber.com/blog/2012/07/10/exchange-2010-even-more-migration-tips/</link>
      <pubDate>Wed, 11 Jul 2012 00:34:32 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2012/07/10/exchange-2010-even-more-migration-tips/</guid>
      <description>&lt;p&gt;It has been a while since I passed on some personal experiences when performing Exchange 2010 migrations. I thought it was about time to update my list to include some more of the lesser known aspects of an Exchange 2010 migration.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Changing an invalid DNS suffixed server</title>
      <link>http://zacharyloeber.com/blog/2012/02/29/exchange-2010-changing-an-invalid-dns-suffixed-server/</link>
      <pubDate>Thu, 01 Mar 2012 05:30:13 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2012/02/29/exchange-2010-changing-an-invalid-dns-suffixed-server/</guid>
      <description>&lt;p&gt;I ran into an interesting Exchange &lt;sup&gt;2010&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2007&lt;/sub&gt; co-existence issue today. After a new Exchange 2010 (all-in-one) server was introduced into the environment traffic would only flow from the 2010 server to the 2007 hub/cas server and not the other way around. The mail queues stated the last error to be&lt;/p&gt;

&lt;pre&gt;“Initial error: 451 4.4.0 dns query failed. The error was: SMTPsend.dns.nonexistentdomain; nonexistent”&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Client Access Role Configuration Report</title>
      <link>http://zacharyloeber.com/blog/2012/02/04/exchange-2010-client-access-role-configuration-report/</link>
      <pubDate>Sat, 04 Feb 2012 14:03:29 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2012/02/04/exchange-2010-client-access-role-configuration-report/</guid>
      <description>Ok, so I woke up and was wide awake at 4am this morning. I took it as a sign to lose my mind for a while and get to hacking another script. The result is a client access setting report script which includes all internal and external paths along with their authentication settings. It needs some prettying up and a bit of love but it does exactly what I&amp;#8217;ve wanted in Exchange 2010, gives me an overall view of all client access settings (specifically related to IIS).</description>
    </item>
    
    <item>
      <title>Big-IP: Custom IIS SOAP Monitor</title>
      <link>http://zacharyloeber.com/blog/2011/01/22/big-ip-custom-iis-soap-monitor/</link>
      <pubDate>Sat, 22 Jan 2011 17:32:01 +0000</pubDate>
      
      <guid>http://zacharyloeber.com/blog/2011/01/22/big-ip-custom-iis-soap-monitor/</guid>
      <description>&lt;p&gt;In working on a production issue with my company&amp;#8217;s flagship SaaS product I worked with some of the brilliant F5 engineers to isolate one web server in the load balanced pool which was intermittently failing. The F5 engineer recommended a health monitor that does more than just poll for a static page. He suggested we implement some kind of soap call to make the application pool do some work and return a result (I guess in case the IIS application pool is misbehaving but not down). So I worked with one of our developers to do just that but ran into some caveats which required yet another custom health monitor.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>