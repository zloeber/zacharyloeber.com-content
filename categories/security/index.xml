<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on </title>
    <link>https://zacharyloeber.com/categories/security/</link>
    <description>Recent content in Security on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Feb 2018 15:59:26 +0000</lastBuildDate>
    
	<atom:link href="https://zacharyloeber.com/categories/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Email Reputation and Design: A Condensed Guide</title>
      <link>https://zacharyloeber.com/blog/2018/02/24/email-reputation-and-design-a-condensed-guide/</link>
      <pubDate>Sat, 24 Feb 2018 15:59:26 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2018/02/24/email-reputation-and-design-a-condensed-guide/</guid>
      <description>&lt;p&gt;Very few domains implement the holy grail of email identity reputation frameworks, &lt;a href=&#34;https://dmarc.org/&#34;&gt;DMARC&lt;/a&gt;. This guide will cover all the steps required to get it implemented for your domain along with some best practices for overall email reputation design.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Powershell: New-ADPasswordReminder</title>
      <link>https://zacharyloeber.com/blog/2016/10/13/powershell-new-adpasswordreminder/</link>
      <pubDate>Thu, 13 Oct 2016 19:03:55 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2016/10/13/powershell-new-adpasswordreminder/</guid>
      <description>&lt;p&gt;A single, self-extracting, self-scheduling, AD password change notice PowerShell script.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell: My Profile</title>
      <link>https://zacharyloeber.com/blog/2016/05/04/powershell-my-profile/</link>
      <pubDate>Thu, 05 May 2016 02:31:54 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2016/05/04/powershell-my-profile/</guid>
      <description>&lt;p&gt;I&amp;#8217;m always interested to see how other people setup their working environment or get things done. But rarely do I share my own environment. Since I&amp;#8217;m putting the effort into pushing my scripting environment publicly to github I may as well explain a bit more about some of what I&amp;#8217;ve setup.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange: Stop Email Exfiltration</title>
      <link>https://zacharyloeber.com/blog/2015/09/24/excxhange-stop-email-exfiltration/</link>
      <pubDate>Fri, 25 Sep 2015 01:41:25 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/09/24/excxhange-stop-email-exfiltration/</guid>
      <description>&lt;p&gt;When your users leave or get removed from the organization they may still be getting company confidential information. Here is how you can find out and stop this from happening.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Powershell: Login As Batch Job Security Rights</title>
      <link>https://zacharyloeber.com/blog/2015/07/17/powershell-login-as-batch-job-security-rights/</link>
      <pubDate>Sat, 18 Jul 2015 04:09:12 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/07/17/powershell-login-as-batch-job-security-rights/</guid>
      <description>Here is a quick bit of PowerShell. It is some snippets of C# code wrapped up with PowerShell which will allow you to assign accounts to the &amp;#8216;login as batch job&amp;#8217; local security rights of a local machine. The code is no great shakes but it is a good example of how you might take some existing online code and modify to suit your needs in PowerShell. This function also compliments another script I&amp;#8217;ve released in the past for automatically scheduling PowerShell scheduled tasks rather well.</description>
    </item>
    
    <item>
      <title>Powershell: Check For Misplaced Certificates</title>
      <link>https://zacharyloeber.com/blog/2014/12/10/powershell-check-for-misplaced-certificates/</link>
      <pubDate>Thu, 11 Dec 2014 03:02:28 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/12/10/powershell-check-for-misplaced-certificates/</guid>
      <description>&lt;p&gt;Here is a script I absentmindedly put together one evening while power watching a TV series on Netflix with the wife. The general idea of this script is to check local machine, trusted root, and intermediate trusted root stores for misplaced or duplicate certificates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange Mailbox Auditing with Powershell</title>
      <link>https://zacharyloeber.com/blog/2014/11/24/exchange-mailbox-auditing-with-powershell/</link>
      <pubDate>Tue, 25 Nov 2014 05:55:01 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/11/24/exchange-mailbox-auditing-with-powershell/</guid>
      <description>&lt;p&gt;Some time ago I wrote a script and GUI for performing security audits of Exchange mailbox and calendar rights in an environment. This script was far more popular than I anticipated and, I’m ashamed to say, was rather poorly written by my current Powershell standards. There is an obvious need to simplify the extraction of mailbox permissions or my old script would not still be so popular. So I’ve started to revisit my old code for this project in hopes of remaking it with my PowerShell reporting engine. The first step in this process is to pull out the several bits of code that do the actual rights/permissions extraction. I think I’ve finally got this part done and see no reason not to release this mini-library of functions first.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync and UM Correlation with Powershell</title>
      <link>https://zacharyloeber.com/blog/2014/11/13/lync-and-um-correlation-with-powershell/</link>
      <pubDate>Fri, 14 Nov 2014 03:31:13 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/11/13/lync-and-um-correlation-with-powershell/</guid>
      <description>I&amp;#8217;ve been working on an Exchange/Lync voice deployment lately and have found a new level of frustration for the lack of connectivity between the several voice components involved in turning up such a solution. That being said it is not very difficult to validate your deployment with a bit of Powershell.
There are a few necessary results to gather where I believe it can be easy to &amp;#8216;miss&amp;#8217; configuration steps when turning up or disabling users:</description>
    </item>
    
    <item>
      <title>Powershell: System Report Script Design</title>
      <link>https://zacharyloeber.com/blog/2014/10/09/powershell-system-report-script-design/</link>
      <pubDate>Thu, 09 Oct 2014 21:29:24 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/10/09/powershell-system-report-script-design/</guid>
      <description>&lt;p&gt;In this post I go back and explain some of my reasoning behind decisions I made in the design of an already released script, &lt;a href=&#34;https://gallery.technet.microsoft.com/Excel-and-HTML-Asset-0ffbf569&#34;&gt;Get-AssetReport&lt;/a&gt;. This was written over a year ago and forgotten about as one of the many unpublished drafts on my blog. The code behind the script I discuss has been upgraded and used in several of my more popular scripts (&lt;a href=&#34;https://gallery.technet.microsoft.com/Active-Directory-Audit-7754a877&#34;&gt;AD Asset Report&lt;/a&gt;, &lt;a href=&#34;https://gallery.technet.microsoft.com/Big-IP-F5-LTM-Load-3fc9a2af&#34;&gt;F5 LTM Report&lt;/a&gt;, and &lt;a href=&#34;https://gallery.technet.microsoft.com/Lync-2013-Mirrored-SQL-132c2f06&#34;&gt;Lync 2013 Status Report&lt;/a&gt;). Some of this content is slightly dated as I&amp;#8217;ve since changed some of the coding but the core concepts are the same. Those digging through my crazy work or learning powershell may get some value from this content so I tidied it up a bit and here it is. Cheers!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Update: Get-CalendarPermission</title>
      <link>https://zacharyloeber.com/blog/2014/09/24/update-get-calendarpermission/</link>
      <pubDate>Wed, 24 Sep 2014 17:43:07 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/09/24/update-get-calendarpermission/</guid>
      <description>&lt;p&gt;Going through older code is a bit like looking through an old yearbook or photo album. If the pictures within are old enough you usually end up laughing at how little you recognize yourself and maybe even marvel a bit at how far you have come. This old function I wrote isn’t the worst of my code but I was still able to update it for measurable improvements.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange: Receive Connector Tango! – Part 2</title>
      <link>https://zacharyloeber.com/blog/2014/08/23/exchange-receive-connector-tango-part-2/</link>
      <pubDate>Sat, 23 Aug 2014 21:20:31 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/08/23/exchange-receive-connector-tango-part-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://zacharyloeber.com/2014/07/06/exchange-receive-connector-tango-part-1/&#34;&gt;In part 1 of this series&lt;/a&gt; I discussed some basic knowledge requirements to get a better grip on receive connectors in Exchange. I continue that conversation with some examples of improperly configured connectors and the issues they may cause. I finish up the discussion with a script you can use to scan your environment for such configurations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange: Receive Connector Tango! – Part 1</title>
      <link>https://zacharyloeber.com/blog/2014/07/06/exchange-receive-connector-tango-part-1/</link>
      <pubDate>Mon, 07 Jul 2014 03:25:13 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/07/06/exchange-receive-connector-tango-part-1/</guid>
      <description>&lt;p&gt;Exchange receive connectors are often configured incorrectly or worse, insecurely. This is the first of a two part series about Exchange receive connectors and what to look out for when setting them up.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gather Remote Event Logs With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/10/16/gather-remote-event-logs-with-powershell/</link>
      <pubDate>Wed, 16 Oct 2013 17:01:13 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/10/16/gather-remote-event-logs-with-powershell/</guid>
      <description>About Gather the remote event log information for one or more systems using wmi, alternate credentials, and multiple runspaces. Function supports custom timeout parameters in case of wmi problems and returns Event Log information for the specified number of past hours. You can view verbose information on each runspace thread in realtime with the -Verbose option.
Version History 1.0.0 &amp;#8211; 10/16/2013
 Initial release  Notes By default 24 hours is what we filter against for the results.</description>
    </item>
    
    <item>
      <title>Gather Remote Command Results With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/19/gather-remote-command-results-with-powershell/</link>
      <pubDate>Thu, 19 Sep 2013 16:22:41 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/19/gather-remote-command-results-with-powershell/</guid>
      <description>&lt;p&gt;Send a remote command using wmi, alternate credentials, and multiple runspaces then retrieve the results serially using mapped secure channels to the remote host. The remote command execution function supports custom timeout parameters in case of wmi problems and returns the remote tmp file information containing the command results. You can view verbose information on each runspace thread in realtime with the -Verbose option.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gather Local Group Membership With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/11/gather-local-group-membership-with-powershell/</link>
      <pubDate>Wed, 11 Sep 2013 14:11:52 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/11/gather-local-group-membership-with-powershell/</guid>
      <description>Gather system local groups and their members for one or more systems using wmi, alternate credentials, and multiple runspaces. Function supports custom timeout parameters in case of wmi problems, a switch for inclusion of empty groups in the results, and returns group names with their members. You can view verbose information on each runspace thread in realtime with the -Verbose option.
Version History 1.0.0 &amp;#8211; 09/11/2013
 Initial release  Notes None, this is an independent release of a function I’ve recently included in a larger project.</description>
    </item>
    
    <item>
      <title>Excel and HTML Asset Reports With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/08/excel-and-html-asset-reports-with-powershell/</link>
      <pubDate>Sun, 08 Sep 2013 05:07:29 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/08/excel-and-html-asset-reports-with-powershell/</guid>
      <description>&lt;p&gt;This set of powershell functions collates and generates reports upon system information it gathers. Information gathered includes hardware health, system information, networking information and much much more. Multiple types of html reports can be generated and all data can be exported directly to an excel workbook, saved as individual reports, and emailed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gather Applied GPOs from Remote Systems With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/03/gather-applied-gpos-from-remote-systems-with-powershell/</link>
      <pubDate>Wed, 04 Sep 2013 04:16:09 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/03/gather-applied-gpos-from-remote-systems-with-powershell/</guid>
      <description>&lt;p&gt;Gather the applied GPO information for one or more systems using wmi, alternate credentials, and multiple runspaces. Function supports custom timeout parameters in case of wmi problems and returns GPO name, applied order, source, no override settings, and more. You can view verbose information on each runspace thread in realtime with the -Verbose option.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Multithreaded System Asset Gathering with Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/08/05/multithreaded-system-asset-gathering-with-powershell/</link>
      <pubDate>Mon, 05 Aug 2013 17:35:31 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/08/05/multithreaded-system-asset-gathering-with-powershell/</guid>
      <description>&lt;p&gt;This function gathers a plethora of useful system information via WMI and multithreading with powershell.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Powershell to Create a Windows Service Dependency Diagrams</title>
      <link>https://zacharyloeber.com/blog/2013/06/17/use-powershell-to-create-a-windows-service-dependency-diagrams/</link>
      <pubDate>Mon, 17 Jun 2013 15:32:42 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/06/17/use-powershell-to-create-a-windows-service-dependency-diagrams/</guid>
      <description>&lt;p&gt;I use powershell with graphviz to generate color coded service dependency diagrams for windows services. Besides creating useful and beautiful diagrams for your environment, this will also provide some interesting functions for gathering remote service information with alternate credentials.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010 Mailbox Audit Report Script</title>
      <link>https://zacharyloeber.com/blog/2013/05/09/exchange-2010-mailbox-audit-report-script/</link>
      <pubDate>Fri, 10 May 2013 02:33:54 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/05/09/exchange-2010-mailbox-audit-report-script/</guid>
      <description>&lt;h1 id=&#34;exchange-2010-mailbox-audit-report-script&#34;&gt;Exchange 2010 Mailbox Audit Report Script&lt;/h1&gt;

&lt;p&gt;Recently I’ve released a number of scripts such as the &lt;a href=&#34;http://gallery.technet.microsoft.com/Colorize-HTML-Table-Cells-2ea63acd&#34;&gt;HTML Table Colorizer&lt;/a&gt;, &lt;a href=&#34;http://gallery.technet.microsoft.com/Get-Exchange-Calendar-5bb4f527&#34;&gt;Exchange Mailbox Calendar Permission Function&lt;/a&gt;, and the &lt;a href=&#34;http://gallery.technet.microsoft.com/Exchange-Mailbox-GUI-5b204590&#34;&gt;Exchange Mailbox GUI&lt;/a&gt;. These were all actually created specifically as support scripts for a report generation powershell tool I’ve been working on, the Exchange Mailbox Auditing Tool.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange: Mailbox GUI</title>
      <link>https://zacharyloeber.com/blog/2013/04/07/exchange-mailbox-gui/</link>
      <pubDate>Mon, 08 Apr 2013 01:10:21 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/04/07/exchange-mailbox-gui/</guid>
      <description>&lt;h1 id=&#34;exchange-2010-mailbox-gui&#34;&gt;Exchange 2010 Mailbox GUI&lt;/h1&gt;

&lt;p&gt;A powershell GUI for selecting and performing actions against multiple Exchange mailboxes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Automated Firewall Rule Generation 1.5</title>
      <link>https://zacharyloeber.com/blog/2012/08/11/exchange-2010-automated-firewall-rule-generation-1-5/</link>
      <pubDate>Sat, 11 Aug 2012 10:17:15 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/08/11/exchange-2010-automated-firewall-rule-generation-1-5/</guid>
      <description>Just some aesthetic changes for upload to the Microsoft scripting repository. Biggest addition is the ability to run the script without parameters (just upgrade the included environment csv to your liking and run the script). Other big addition is the help section.
GenerateExchangeFirewallRequirements_1-5
or
At the Microsoft Script Repository</description>
    </item>
    
    <item>
      <title>Create Your Own Network Assessment Appliance</title>
      <link>https://zacharyloeber.com/blog/2012/04/08/create-your-own-network-assessment-appliance/</link>
      <pubDate>Mon, 09 Apr 2012 00:49:19 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/04/08/create-your-own-network-assessment-appliance/</guid>
      <description>In this write-up I setup several network assessment tools which can be used in the discovery process of a new environment. This can be useful for a newly hired sysadmin or a consultant in rapidly gathering information to assess the health and/or state of a network.
Introduction I often find myself assessing a foreign network infrastructure for performance or other issues. Depending on the size of the environment, digesting everything can be daunting without the help of some third party tools.</description>
    </item>
    
    <item>
      <title>Active Directory: Essential Tools</title>
      <link>https://zacharyloeber.com/blog/2011/08/11/active-directory-essential-tools/</link>
      <pubDate>Thu, 11 Aug 2011 18:35:00 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/08/11/active-directory-essential-tools/</guid>
      <description>&lt;p&gt;During my many years of working with active directory I’ve used several tools. Here are some of the best that I’ve used which are not baked into windows. Good thing about this list is that most of these tools are fee! Another bonus is that most of the information gathering tools don’t require elevated rights as, by default, domain users have read-only access to active directory.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Network Communication Table</title>
      <link>https://zacharyloeber.com/blog/2011/07/30/exchange-2010-network-communication-table/</link>
      <pubDate>Sat, 30 Jul 2011 17:06:36 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/07/30/exchange-2010-network-communication-table/</guid>
      <description>I figured I&amp;#8217;d post the massive table of firewall rules I compiled for my Exchange 2010 firewall generation script. It has both the source and destination roles for many aspects of an Exchange environment. Where there are ???&amp;#8217;s is where I&amp;#8217;m simply not certain (mainly around encryption between certain roles). If anyone spots any mistakes or omissions please let me know and I&amp;#8217;ll update the accordingly.
Exchange 2010 Network Communication Table By Role</description>
    </item>
    
    <item>
      <title>Exchange 2010: Automated Firewall Rule Generation 1.4</title>
      <link>https://zacharyloeber.com/blog/2011/07/29/exchange-2010-automated-firewall-rule-generation-1-4/</link>
      <pubDate>Fri, 29 Jul 2011 15:28:07 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/07/29/exchange-2010-automated-firewall-rule-generation-1-4/</guid>
      <description>&lt;p&gt;I made some updates to the automated firewall rule generation script. This includes some updates to the firewall rule spreadsheet to give information on setting setic ports and port ranges for RPC based services. This csv file may be a good general reference even without the script.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Automated Firewall Rule Generation 1.2</title>
      <link>https://zacharyloeber.com/blog/2011/07/20/exchange-2010-automated-firewall-rule-generation-1-2/</link>
      <pubDate>Wed, 20 Jul 2011 16:35:08 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/07/20/exchange-2010-automated-firewall-rule-generation-1-2/</guid>
      <description>I made a few changes to this script to make it more modular and to allow for more exceptions in regards to DAGs and sites. Enjoy!
Exchange 2010 Firewall Rule Generation Script</description>
    </item>
    
    <item>
      <title>Exchange 2010: Certificate Install Script</title>
      <link>https://zacharyloeber.com/blog/2011/06/30/exchange-2010-certificate-install-script/</link>
      <pubDate>Thu, 30 Jun 2011 15:39:27 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/06/30/exchange-2010-certificate-install-script/</guid>
      <description>&lt;p&gt;Many of the cert providers require that you install both an intermediary and a root trusted cert on the servers which you are configuring your newly requested Unified Communications certificate on. If you are doing an Exchange migration including several ISA/TMG/Exchange (2003 and 2010) servers this can be a tedious process. Here is the quick way to install all three certificates once they are on the server&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Automated Firewall Rule Generation</title>
      <link>https://zacharyloeber.com/blog/2011/06/24/exchange-2010-automated-firewall-rule-generation/</link>
      <pubDate>Fri, 24 Jun 2011 16:40:50 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/06/24/exchange-2010-automated-firewall-rule-generation/</guid>
      <description>&lt;p&gt;A single, or even a dual site Exchange 2010 deployment does not usually require too much internal firewall manipulation. But if you have to setup a Exchange 2010 environment where there are many global sites or a heavily segmented network, the number of firewall requests required to get a fully functioning configuration working can be daunting. Wouldn&amp;#8217;t it be nice to have some of those firewall rules automatically generated for you?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Protect VIP Mailboxes with Exclusive Scopes</title>
      <link>https://zacharyloeber.com/blog/2011/05/04/exchange-2010-protect-vip-mailboxes-with-exclusive-scopes/</link>
      <pubDate>Wed, 04 May 2011 21:26:37 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/05/04/exchange-2010-protect-vip-mailboxes-with-exclusive-scopes/</guid>
      <description>&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Prior to starting my new job I wanted to ensure that my previous employer was able to protect VIP mailboxes in their Exchange 2010 SP1 organization. I had to do this with exclusive scopes and these are the steps I had to follow. A general knowledge of role based security is assumed in this post.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OCS 2007 R2: CRL Issue Causing Address Book Download Error</title>
      <link>https://zacharyloeber.com/blog/2011/03/31/ocs-2007-r2-crl-issue-causing-address-book-download-error/</link>
      <pubDate>Thu, 31 Mar 2011 15:21:09 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/03/31/ocs-2007-r2-crl-issue-causing-address-book-download-error/</guid>
      <description>&lt;p&gt;I ran into this issue recently. End users experienced a red splat in communicator exhibiting that there was an issue syncing the corporate address book. I found &lt;a title=&#34;OCS 2007 R2 CRL Issue&#34; href=&#34;http://blog.danovich.com.au/2009/11/04/office-communicator-error-cannot-synchronize-address-book/&#34; target=&#34;_blank&#34;&gt;this excellent article&lt;/a&gt; explaining how an invalid Certificate Revocation List error may be causing this issue. My issue was slightly similar in nature but with some caveats.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows: 2003 to 2008 R2 RADIUS Migration</title>
      <link>https://zacharyloeber.com/blog/2011/03/17/windows-2003-to-2008-r2-radius-migration/</link>
      <pubDate>Thu, 17 Mar 2011 12:58:12 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/03/17/windows-2003-to-2008-r2-radius-migration/</guid>
      <description>&lt;p&gt;I found myself doing yet another Windows 2003 IAS Radius server migration to 2008 R2 NPS. I found that I had my prior notes and was able to do this quickly but, hell, if I&amp;#8217;m looking this up in my own notes I may as well just post this succinct little procedure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Active Directory: Role Based Access Modeling</title>
      <link>https://zacharyloeber.com/blog/2011/02/21/active-directory-role-based-access-modeling/</link>
      <pubDate>Tue, 22 Feb 2011 04:22:28 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/02/21/active-directory-role-based-access-modeling/</guid>
      <description>&lt;p&gt;Much of my time is spend delving into the minutia of a particular technology to resolve issues or improve department processes. But sometimes understanding and implementing a technology is not the best “fix” for an issue. Sometimes it is a mindset or a model that needs to change. I came up with this security grouping model to address some of the pains of managing permissions across large groups of systems in our environment. Ok, I modified a long standing Microsoft recommendation of &lt;a href=&#34;http://en.wikipedia.org/wiki/AGDLP&#34;&gt;AGDLP (an abbreviation of &amp;#8220;account, global, domain local, permission&amp;#8221;)&lt;/a&gt; to meet our needs. Regardless here is a quick rundown of this security group model I devised if anyone is interested.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>