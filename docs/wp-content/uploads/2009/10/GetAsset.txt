<!-- 
	GetAsset.hta

	AUTHOR:  Zach Loeber 
	DATE:    7/8/2008
	COMMENT: Can enter multiple computernames divided by ";"
-->

<HTML>
<HEAD>
<META NAME="Get Asset" Content="Get Asset">
<TITLE>Get Computer Asset Information</TITLE>
    <HTA:APPLICATION ID="oHTA"
     APPLICATIONNAME="getAssetHTA"
     BORDER="thin"
     BORDERSTYLE="normal"
     CAPTION="yes"
     ICON=""
     MAXIMIZEBUTTON="yes"
     MINIMIZEBUTTON="yes"
     SHOWINTASKBAR="yes"
     SINGLEINSTANCE="yes"
     SYSMENU="yes"
     VERSION="1.0">

<SCRIPT LANGUAGE="VBScript">
	
Sub Window_OnLoad
    For i = 1 to 180
        window.resizeTo 470, i
    Next
End Sub

Sub GetAsset	
	aComputers = Split(strComputer.Value, ";")
	For Each Computer in aComputers
		strResult = ""
		If IsAlive(Computer) then
			if WMIEnabled(Computer) then
				strResult = "Computer:" & Computer & VBCrLf
				Set objWMIService = GetObject("winmgmts:" & "{impersonationLevel=impersonate}!\\" & Computer & "\root\cimv2")
				Set colBIOS = objWMIService.ExecQuery ("Select * from Win32_BIOS")
				Set colComputer = objWMIService.ExecQuery ("Select * from Win32_ComputerSystem")
	
				' -- Get who is logged in -- 
				For Each objComputer in colComputer
					If not objComputer.UserName = "" Then
				'	-- Use this code to strip out the domain -- '
				'		strLogonUser = Split(objComputer.UserName,"\")
				'		strLogonUser(1) = UCase(Left(strLogonUser(1),1)) & Trim(Mid(strLogonUser(1),2,20))
				'		strResult = strResult & "User Logged In: " & strLogonUser(1) & VBCrLf
					  strResult = strResult & "User Logged In: " & objComputer.UserName & VBCrLf
					Else
						strResult = strResult & "User Logged In: Nobody" & VBCrLf
					End If
		
					strResult = strResult & "Make: " & objComputer.Manufacturer & VBCrLf
					strResult = strResult & "Model: " & objComputer.Model & VBCrLf
				Next 
	
				For each objBIOS in colBIOS
				    strResult = strResult & "Serial Number: " & objBIOS.SerialNumber & VBCrLf
				' -- Everything below is extra info you can get if you uncomment it --
				'    strResult = strResult & "Build Number: " & objBIOS.BuildNumber & VBCrLf
				'    strResult = strResult & "Current Language: " & objBIOS.CurrentLanguage & VBCrLf
				'    strResult = strResult & "Installable Languages: " & objBIOS.InstallableLanguages & VBCrLf
				'    strResult = strResult & " Manufacturer: " & objBIOS.Manufacturer & VBCrLf
				'    strResult = strResult & "Name: " & objBIOS.Name & VBCrLf
				'    strResult = strResult & "Primary BIOS: " & objBIOS.PrimaryBIOS & VBCrLf
				'    strResult = strResult & "Release Date: " & objBIOS.ReleaseDate & VBCrLf
				'    strResult = strResult & "SMBIOS Version: " & objBIOS.SMBIOSBIOSVersion & VBCrLf
				'    strResult = strResult & "SMBIOS Major Version: " & objBIOS.SMBIOSMajorVersion & VBCrLf
				'    strResult = strResult & "SMBIOS Minor Version: " & objBIOS.SMBIOSMinorVersion & VBCrLf
				'    strResult = strResult & "SMBIOS Present: " & objBIOS.SMBIOSPresent & VBCrLf
				'    strResult = strResult & "Status: " & objBIOS.Status & VBCrLf
				'    strResult = strResult & "Version: " & objBIOS.Version & VBCrLf
				'    For i = 0 to Ubound(objBIOS.BiosCharacteristics)
				'        strResult = strResult & "BIOS Characteristics: " & _
				'            objBIOS.BiosCharacteristics(i) & VBCrLf
				'    Next
				' --------------------------------------------------------------------
				Next
				
				else
					strResult = strResult & Computer & " does not have WMI." & VBCrLf
				end if
		else
			strResult = strResult & Computer & " is not reachable" & VBCrLf
		end if
	AssetInfo.Value =  AssetInfo.Value & strResult & VBCrLf
	Next	
end sub

' Ping Check
Function IsAlive(strHost)
    Set objPing = GetObject("winmgmts:{impersonationLevel=impersonate}")._
        ExecQuery("select * from Win32_PingStatus where address = '"_
            & strHost & "'")
    For Each objStatus in objPing
        If IsNull(objStatus.StatusCode) or objStatus.StatusCode<>0 Then 
            IsAlive = False
		Else
			IsAlive = True
        End If
    Next
End Function

' WMI Check
Function WMIEnabled(strHost)
	On Error Resume Next
	Set objWMIService = GetObject("winmgmts:\\" & strHost & "\root\cimv2")
		If Err.number <> 0 Then
			WMIEnabled = False
		Else
			WMIEnabled = True
		End If
		' Tidy up by destroying the objects created
		Set objWMIService = Nothing
End Function
</SCRIPT>

</HEAD>

<BODY>
	<input type="text" name="strComputer" size="50">
	<input id=runbutton  class="button" type="button" value="Get Asset" name="run_button"  onClick="GetAsset">
	<textarea name="AssetInfo" rows="5" cols="50"></textarea>
</BODY>

</HTML>