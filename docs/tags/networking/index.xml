<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networking on Zachary Loeber</title>
    <link>https://zacharyloeber.com/tags/networking/</link>
    <description>Recent content in Networking on Zachary Loeber</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 31 Jan 2017 03:23:32 +0000</lastBuildDate>
    
	<atom:link href="https://zacharyloeber.com/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PowerShell: Azure ARM Site Overview</title>
      <link>https://zacharyloeber.com/blog/2017/01/30/powershell-azure-arm-site-overview/</link>
      <pubDate>Tue, 31 Jan 2017 03:23:32 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2017/01/30/powershell-azure-arm-site-overview/</guid>
      <description>&lt;p&gt;Visualizing an Azure deployment can be a bit tricky. This short Azure summary script is a good way to start though.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gather Remote Event Logs With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/10/16/gather-remote-event-logs-with-powershell/</link>
      <pubDate>Wed, 16 Oct 2013 17:01:13 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/10/16/gather-remote-event-logs-with-powershell/</guid>
      <description>About Gather the remote event log information for one or more systems using wmi, alternate credentials, and multiple runspaces. Function supports custom timeout parameters in case of wmi problems and returns Event Log information for the specified number of past hours. You can view verbose information on each runspace thread in realtime with the -Verbose option.
Version History 1.0.0 &amp;#8211; 10/16/2013
 Initial release  Notes By default 24 hours is what we filter against for the results.</description>
    </item>
    
    <item>
      <title>Get Remote Shadow Volume Information With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/14/get-remote-shadow-volume-information-with-powershell/</link>
      <pubDate>Sun, 15 Sep 2013 02:57:55 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/14/get-remote-shadow-volume-information-with-powershell/</guid>
      <description>&lt;p&gt;Gather the remote shadow volume information for one or more systems using wmi, alternate credentials, and multiple runspaces. Function supports custom timeout parameters in case of wmi problems and returns shadow volume information, shadow copies, their providers, and settings. You can view verbose information on each runspace thread in realtime with the -Verbose option.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enhanced Remote Server Connectivity Testing With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/06/25/enhanced-remote-server-connectivity-testing-with-powershell/</link>
      <pubDate>Tue, 25 Jun 2013 14:22:18 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/06/25/enhanced-remote-server-connectivity-testing-with-powershell/</guid>
      <description>&lt;p&gt;Test the following connectivity methods to a server: RDP, ping, rpc, wsman, sccm agent, scom agent, and remote registry. Optionally an alternate credential can be used. Versatility is added with options to return only true/false when singular tests are performed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Powershell to Gather Disk/Partition/Mount Point Information</title>
      <link>https://zacharyloeber.com/blog/2013/06/23/use-powershell-to-gather-diskpartitionmount-point-information/</link>
      <pubDate>Mon, 24 Jun 2013 04:41:01 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/06/23/use-powershell-to-gather-diskpartitionmount-point-information/</guid>
      <description>&lt;p&gt;I put together a function for remotely gathering Windows disk information. This was specifically written to accommodate alternate credentials. This script also accounts for the glaring disconnect between win32_Volume and win32_DiskDrive within WMI.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Audit User Profile Folders With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/06/21/audit-user-profile-folders-with-powershell/</link>
      <pubDate>Fri, 21 Jun 2013 18:46:09 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/06/21/audit-user-profile-folders-with-powershell/</guid>
      <description>&lt;p&gt;This function will aggregate sub-folders within a folder on a server and attempt to associate them with user IDs within a domain and provide additional information. This script can also be used to move folders for disabled or non-existent accounts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange: Co-existence Client Access Preparation Report</title>
      <link>https://zacharyloeber.com/blog/2013/01/15/exchange-co-existence-client-access-preparation-report/</link>
      <pubDate>Wed, 16 Jan 2013 03:36:50 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/01/15/exchange-co-existence-client-access-preparation-report/</guid>
      <description>&lt;p&gt;If you upgrade Exchange in a co-existence scenario (you want to keep the same client access namespace) there is one crucial moment of truth which must be overcome. This is the phase of the migration I&amp;#8217;ve come to call the &amp;#8220;dns flip-over&amp;#8221; or the &amp;#8220;client access part&amp;#8221;. Without preparation this part of the migration can be a real headache as issues are directly experienced by your end users.  This is a simple report card you can use to prepare you for this moment.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create Your Own Network Assessment Appliance: Additional Tools</title>
      <link>https://zacharyloeber.com/blog/2012/11/28/create-your-own-network-assessment-appliance-additional-tools/</link>
      <pubDate>Thu, 29 Nov 2012 02:24:46 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/11/28/create-your-own-network-assessment-appliance-additional-tools/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;I &lt;a href=&#34;https://zacharyloeber.com/2012/04/08/create-your-own-network-assessment-appliance/&#34; title=&#34;Create your own network assessment appliance&#34;&gt;previously did a write up&lt;/a&gt; on a personal virtual machine I like to keep at hand for performing network analysis and discovery. I&amp;#8217;ve since added a few tools to the VM and documented how they were installed so I figured I&amp;#8217;d share on how it was done. Even if you don&amp;#8217;t setup everything in this post it may be worthwhile to glance through it for some network engineering tools which are free to setup and use but not highly publicized. Anyone who cares to read this post has likely heard of Solarwinds but I highly doubt you have heard of all the tools in this list (let alone how to set them up). Regardless, I&amp;#8217;ll start with a tool anyone worth their salt has heard of though, Cacti&amp;#8230;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange – The State Of External Client Access</title>
      <link>https://zacharyloeber.com/blog/2012/11/22/exchange-the-state-of-external-client-access/</link>
      <pubDate>Thu, 22 Nov 2012 19:58:04 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/11/22/exchange-the-state-of-external-client-access/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Most within the messaging and collaboration industry are hyped up about the next wave of Microsoft collaboration and messaging products which are soon to be released. Among these products is Exchange 2013 RTM. This type of release typically precedes yet another wave of architecture upgrades across the corporate landscape. Some of these (beta testers) will be will undoubtedly upgrade to Exchange 2013.&lt;/p&gt;

&lt;p&gt;Other corporations will start to feel the burn to upgrade as well. These will be organizations which realize that their Exchange &lt;sup&gt;2003&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2007&lt;/sub&gt; infrastructure is nearing a decade old existence and cannot meet the demands of their ever growing mobile workforce. Realizing they are behind the curve, they may feel hastened to upgrade as well, possibly just to Exchange 2010. Regardless the reason in choosing to upgrade their messaging infrastructure, there are critical design decisions which need to be made in how clients access this infrastructure both internally and externally. This article focuses solely on the external access aspect of the infrastructure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync 2010: IP/DNS Workbook</title>
      <link>https://zacharyloeber.com/blog/2012/06/23/lync-2010-ipdns-workbook/</link>
      <pubDate>Sat, 23 Jun 2012 20:24:40 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/06/23/lync-2010-ipdns-workbook/</guid>
      <description>&lt;p&gt;I just ran across &lt;a href=&#34;http://blogs.technet.com/b/nexthop/archive/2011/12/07/useful-tips-for-testing-your-lync-edge-server.aspx&#34; title=&#34;Useful Tips For Testing Your Lync Edge Server&#34;&gt;a Lync article&lt;/a&gt; with all kinds of nice tables which distilled the myriad of DNS/IP addresses in a Lync deployment down to an easy to read format. I happen to have created one of these tables myself for a Lync deployment which included a standard Lync pool, XMPP gateway, Lync Mobility, and a single edge server. I figured others may find some use from it as it auto-populates the dns entries and what they are supposed to point to based on what you fill out for the highlighted cells. Sure you get some of this in the Lync Server 2010 Planning Tool but this offers a slightly different view of the environment as well as a nice one page overview.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create Your Own Network Assessment Appliance</title>
      <link>https://zacharyloeber.com/blog/2012/04/08/create-your-own-network-assessment-appliance/</link>
      <pubDate>Mon, 09 Apr 2012 00:49:19 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/04/08/create-your-own-network-assessment-appliance/</guid>
      <description>In this write-up I setup several network assessment tools which can be used in the discovery process of a new environment. This can be useful for a newly hired sysadmin or a consultant in rapidly gathering information to assess the health and/or state of a network.
Introduction I often find myself assessing a foreign network infrastructure for performance or other issues. Depending on the size of the environment, digesting everything can be daunting without the help of some third party tools.</description>
    </item>
    
    <item>
      <title>Exchange 2010 One-liner: Get All Network Interface Information</title>
      <link>https://zacharyloeber.com/blog/2011/08/19/exchange-2010-one-liner-get-all-network-interface-information/</link>
      <pubDate>Fri, 19 Aug 2011 16:57:15 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/08/19/exchange-2010-one-liner-get-all-network-interface-information/</guid>
      <description>Here are a few quick powershell one-liners to get all the network interface information in your exchange environment:
$ExchServers=(Get-ExchangeServer); @(foreach ($Srv in $ExchServers) {Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName $Srv.Name | select @{Name=&#34;Server&#34;;Expression={$Srv.Name}},@{Name=&#34;DNS Host Name&#34;;Expression={$_.DNSHostName}},@{Name=&#34;Server Role&#34;;Expression={$Srv.ServerRole}},Description,@{Name=&#34;IP Address&#34;;Expression={$_.IPAddress}},@{Name=&#34;IP Subnet&#34;;Expression={$_.IPSubnet}},@{Name=&#34;Default Gateway&#34;;Expression={$_.DefaultIPGateway}},@{Name=&#34;Mac Address&#34;;Expression={$_.MacAddress}},@{Name=&#34;DNS Suffix Search Order&#34;;Expression={$_.DNSDomainSuffixSearchOrder}},@{Name=&#34;DNS Server Search Order&#34;;Expression={$_.DNSServerSearchOrder}},FullDNSRegistrationEnabled}) |Export-Csv -NoTypeInformation &#34;C:\Temp\Exchange-network.csv&#34; If you just want interface information for Exchange 2010 servers:
$ExchServers=(Get-ExchangeServer | where {$_.ServerRole -ne &#34;None&#34;}); @(foreach ($Srv in $ExchServers) {Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName $Srv.</description>
    </item>
    
    <item>
      <title>Exchange 2010: A Few More Migration Tips</title>
      <link>https://zacharyloeber.com/blog/2011/08/13/exchange-2010-a-few-more-migration-tips/</link>
      <pubDate>Sat, 13 Aug 2011 23:43:04 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/08/13/exchange-2010-a-few-more-migration-tips/</guid>
      <description>&lt;p&gt;Here are a few more notes from the field to consider when you are planning your Exchange 2010 deployment and migration. Some of these items are good to know even after you have completed your migration and may help with overall system stability.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Network Communication Table</title>
      <link>https://zacharyloeber.com/blog/2011/07/30/exchange-2010-network-communication-table/</link>
      <pubDate>Sat, 30 Jul 2011 17:06:36 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/07/30/exchange-2010-network-communication-table/</guid>
      <description>I figured I&amp;#8217;d post the massive table of firewall rules I compiled for my Exchange 2010 firewall generation script. It has both the source and destination roles for many aspects of an Exchange environment. Where there are ???&amp;#8217;s is where I&amp;#8217;m simply not certain (mainly around encryption between certain roles). If anyone spots any mistakes or omissions please let me know and I&amp;#8217;ll update the accordingly.
Exchange 2010 Network Communication Table By Role</description>
    </item>
    
    <item>
      <title>Exchange 2010: Automated Firewall Rule Generation 1.4</title>
      <link>https://zacharyloeber.com/blog/2011/07/29/exchange-2010-automated-firewall-rule-generation-1-4/</link>
      <pubDate>Fri, 29 Jul 2011 15:28:07 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/07/29/exchange-2010-automated-firewall-rule-generation-1-4/</guid>
      <description>&lt;p&gt;I made some updates to the automated firewall rule generation script. This includes some updates to the firewall rule spreadsheet to give information on setting setic ports and port ranges for RPC based services. This csv file may be a good general reference even without the script.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Automated Firewall Rule Generation 1.2</title>
      <link>https://zacharyloeber.com/blog/2011/07/20/exchange-2010-automated-firewall-rule-generation-1-2/</link>
      <pubDate>Wed, 20 Jul 2011 16:35:08 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/07/20/exchange-2010-automated-firewall-rule-generation-1-2/</guid>
      <description>I made a few changes to this script to make it more modular and to allow for more exceptions in regards to DAGs and sites. Enjoy!
Exchange 2010 Firewall Rule Generation Script</description>
    </item>
    
    <item>
      <title>Windows: 2003 to 2008 R2 RADIUS Migration</title>
      <link>https://zacharyloeber.com/blog/2011/03/17/windows-2003-to-2008-r2-radius-migration/</link>
      <pubDate>Thu, 17 Mar 2011 12:58:12 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/03/17/windows-2003-to-2008-r2-radius-migration/</guid>
      <description>&lt;p&gt;I found myself doing yet another Windows 2003 IAS Radius server migration to 2008 R2 NPS. I found that I had my prior notes and was able to do this quickly but, hell, if I&amp;#8217;m looking this up in my own notes I may as well just post this succinct little procedure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BIG-IP: Quick Tip</title>
      <link>https://zacharyloeber.com/blog/2011/02/28/big-ip-quick-tip/</link>
      <pubDate>Tue, 01 Mar 2011 00:35:06 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/02/28/big-ip-quick-tip/</guid>
      <description>They silently (well maybe not so silent as I didn&amp;#8217;t check if it was announced) published an internal tool that the F5 support engineers use for troubleshooting Big-ip load balancer configuration dumps. With a login account you can access this tool at the aptly named URL of http://ihealth.f5.com. This has some really cool info that you might fine useful in resolving load balancer issues in your environment.</description>
    </item>
    
    <item>
      <title>Virtual Connect: Cisco MDS 9500 Fiber Connectivity</title>
      <link>https://zacharyloeber.com/blog/2011/02/03/virtual-connect-cisco-mds-9500-fiber-connectivity/</link>
      <pubDate>Fri, 04 Feb 2011 01:14:02 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2011/02/03/virtual-connect-cisco-mds-9500-fiber-connectivity/</guid>
      <description>&lt;p&gt;I’ve done quite a bit of work with HP’s Virtual Connect  and C7000 blade enclosures in a contained (almost pure HP) environment. Today I ran into an issue which flummoxed both myself and an on-site engineer while attempting to connect the VC 8gb interconnect bays to the Cisco MDS fiber module for an upcoming (and exciting!) VMAX implementation.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>