<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lync on Zachary Loeber</title>
    <link>https://zacharyloeber.com/tags/lync/</link>
    <description>Recent content in Lync on Zachary Loeber</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 12 Sep 2015 20:05:26 +0000</lastBuildDate>
    
	<atom:link href="https://zacharyloeber.com/tags/lync/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lync/S4B Client: Call Forwarding Options Compared</title>
      <link>https://zacharyloeber.com/blog/2015/05/01/lyncs4b-client-call-forwarding-options-compared/</link>
      <pubDate>Fri, 01 May 2015 19:00:48 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/05/01/lyncs4b-client-call-forwarding-options-compared/</guid>
      <description>&lt;p&gt;Here is a comparison chart I put together describing the different call forwarding options available to end users or their teams. This covers everything which can be setup by users in Lync as well as team calling (setup by the admin).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync 2013: Scripting QoS Config on Edge Servers</title>
      <link>https://zacharyloeber.com/blog/2015/04/04/lync-2013-scripting-qos-config-on-edge-servers/</link>
      <pubDate>Sat, 04 Apr 2015 21:41:51 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/04/04/lync-2013-scripting-qos-config-on-edge-servers/</guid>
      <description>&lt;p&gt;In many environments the Lync 2013 edge servers are configured in a standalone workgroup without any easy method for setting standard policies (such as GPOs). To make QoS configuration a bit less manual and error prone I’ve put together this script which can be run in an administrative powershell prompt. It will update the NLA setting (or create it if it doesn’t already exist), backup and prompt for removal any existing Qos settings, then import the registry settings for Audio, Video, and App QoS settings as defined in the script parameters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync Book Review: Lync Server Cookbook</title>
      <link>https://zacharyloeber.com/blog/2015/03/14/lync-book-review-lync-server-cookbook/</link>
      <pubDate>Sun, 15 Mar 2015 01:51:53 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/03/14/lync-book-review-lync-server-cookbook/</guid>
      <description>&lt;p&gt;I had planned to purchase this book at some point but instead was pleasantly surprised by an offer from one of the authors to provide an objective review of ‘&lt;a href=&#34;http://www.amazon.com/Lync-Server-Cookbook-Fabrizio-Volpe-ebook/dp/B00SVBFBQS/ref=dp_kinw_strp_1&#34;&gt;Lync Server Cookbook&lt;/a&gt;‘! As I have worked with the product in some form since LCS/OCS days I believe I can speak with some authority on subject matter and readily agreed. With that being said, lets start with the book’s overarching scope and structure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync: Local and Site-to-Site Dial Plan GUI Script</title>
      <link>https://zacharyloeber.com/blog/2015/01/12/lync-local-and-site-to-site-dial-plan-gui-script/</link>
      <pubDate>Tue, 13 Jan 2015 02:37:46 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/01/12/lync-local-and-site-to-site-dial-plan-gui-script/</guid>
      <description>&lt;p&gt;In a multiple, or even single, site VOIP deployment there are some  steps you can take to make life a whole lot easier on your end users. One of of the common features implemented across phone deployments (VoIP or otherwise) is site local and site-to-site dialing shortcuts. These shortcuts generally reduce the number of digits users have to dial to reach one another. In this post I’ll go over how you might setup such a dial plan in Lync. First I’ll go over how you might setup such a plan manually then I’ll provide a GUI tool to do the same thing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync: Voice Route Diagram Creation Script</title>
      <link>https://zacharyloeber.com/blog/2014/12/02/lync-voice-route-diagram-creation-script/</link>
      <pubDate>Tue, 02 Dec 2014 18:11:31 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/12/02/lync-voice-route-diagram-creation-script/</guid>
      <description>&lt;p&gt;Lync voice routing boils down to three basic components working in concert to decide call flow. It seems quite simple on paper, you assign voice policies which determine call routes based on PSTN usages (often called the ‘glue’). After looking at Lync voice routing way too many times I finally caved into producing a script to create diagrams of the things over the Thanksgiving holiday weekend.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync UCS Contacts Reporting with Powershell</title>
      <link>https://zacharyloeber.com/blog/2014/11/21/lync-ucs-contacts-reporting-with-powershell/</link>
      <pubDate>Fri, 21 Nov 2014 17:37:30 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/11/21/lync-ucs-contacts-reporting-with-powershell/</guid>
      <description>By default a Lync enabled account within a Lync/Exchange 2013 environment will be enabled for UCS (Unified Contact Store). This means that the Lync contacts get saved in the Lync user’s mailbox and not the Lync database. In order to get a list of the contacts associated with these accounts you have to export data to a zip file with some debug Lync commands and, even then, the information is buried in a hard to interpret XML file.</description>
    </item>
    
    <item>
      <title>Lync and UM Correlation with Powershell</title>
      <link>https://zacharyloeber.com/blog/2014/11/13/lync-and-um-correlation-with-powershell/</link>
      <pubDate>Fri, 14 Nov 2014 03:31:13 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/11/13/lync-and-um-correlation-with-powershell/</guid>
      <description>I’ve been working on an Exchange/Lync voice deployment lately and have found a new level of frustration for the lack of connectivity between the several voice components involved in turning up such a solution. That being said it is not very difficult to validate your deployment with a bit of Powershell.
There are a few necessary results to gather where I believe it can be easy to ‘miss’ configuration steps when turning up or disabling users:</description>
    </item>
    
    <item>
      <title>PS Quickie: New-PIN</title>
      <link>https://zacharyloeber.com/blog/2014/10/09/ps-quickie-new-pin/</link>
      <pubDate>Fri, 10 Oct 2014 01:09:09 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/10/09/ps-quickie-new-pin/</guid>
      <description>Setting a bunch of PINs for Lync devices is not difficult at all. Here is a script to pre-generate them should you find the need to do so. The function simply generates random digits between 0 and 9 and convert to a string. An exception is made for the first digit (as zeros are often not displayed in csv files when opened in excel) and only digits 1-9 are used.</description>
    </item>
    
    <item>
      <title>Lync 2013: The Many QoS Settings</title>
      <link>https://zacharyloeber.com/blog/2014/06/01/lync-2013-the-many-qos-settings/</link>
      <pubDate>Sun, 01 Jun 2014 15:13:00 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/06/01/lync-2013-the-many-qos-settings/</guid>
      <description>&lt;p&gt;There are more than a few QoS settings in Lync 2013. Here is a script which should gather most of them in a human readable format for your convenience.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AD Audit Report with Powershell: Part 3</title>
      <link>https://zacharyloeber.com/blog/2014/01/10/ad-audit-report-with-powershell-part-3/</link>
      <pubDate>Sat, 11 Jan 2014 04:16:29 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/01/10/ad-audit-report-with-powershell-part-3/</guid>
      <description>&lt;p&gt;This is my third and final major update to my AD auditing script. This includes a handful of new useful sections such as domain published printers, NPS servers, DHCP servers, as well as SCCM sites and DPs. Other improvements include easier to use script parameters and bug fixes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync 2013: Monitoring Mirrored SQL Databases With PowerShell</title>
      <link>https://zacharyloeber.com/blog/2013/11/25/lync-2013-monitoring-mirrored-sql-databases-with-powershell/</link>
      <pubDate>Mon, 25 Nov 2013 18:16:24 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/11/25/lync-2013-monitoring-mirrored-sql-databases-with-powershell/</guid>
      <description>&lt;p&gt;In Lync 2013 you are given a powerful new backend redundancy option for your important databases in the form of SQL mirroring. In this article I’ll discuss which services are able to be mirrored, the databases they encompass, and provide a PowerShell script to generate a report on the database mirror status. I also threw in Lync CMS replication and service status sections because it is the civil thing to do…&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Find Disabled Users With Lync Enabled Without Lync Cmdlts</title>
      <link>https://zacharyloeber.com/blog/2013/09/30/find-disabled-users-with-lync-enabled-without-lync-cmdlts/</link>
      <pubDate>Mon, 30 Sep 2013 21:19:15 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/30/find-disabled-users-with-lync-enabled-without-lync-cmdlts/</guid>
      <description>&lt;p&gt;Here is a quick tip which applies to more than just Lync. I use powershell with .NET ADSI to gather a list of all users which are disabled but still have Lync sip addresses assigned. There are numerous reasons to disable lync on such accounts. One reason would be to make certain that users whom are no longer with the organization get removed from the Lync address list. Another is so these same users can no longer access Lync! (Yes, a disabled AD account may still be authorized to access Lync).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange – The State Of External Client Access</title>
      <link>https://zacharyloeber.com/blog/2012/11/22/exchange-the-state-of-external-client-access/</link>
      <pubDate>Thu, 22 Nov 2012 19:58:04 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/11/22/exchange-the-state-of-external-client-access/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Most within the messaging and collaboration industry are hyped up about the next wave of Microsoft collaboration and messaging products which are soon to be released. Among these products is Exchange 2013 RTM. This type of release typically precedes yet another wave of architecture upgrades across the corporate landscape. Some of these (beta testers) will be will undoubtedly upgrade to Exchange 2013.&lt;/p&gt;
&lt;p&gt;Other corporations will start to feel the burn to upgrade as well. These will be organizations which realize that their Exchange 2003/2007 infrastructure is nearing a decade old existence and cannot meet the demands of their ever growing mobile workforce. Realizing they are behind the curve, they may feel hastened to upgrade as well, possibly just to Exchange 2010. Regardless the reason in choosing to upgrade their messaging infrastructure, there are critical design decisions which need to be made in how clients access this infrastructure both internally and externally. This article focuses solely on the external access aspect of the infrastructure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync 2010: IP/DNS Workbook</title>
      <link>https://zacharyloeber.com/blog/2012/06/23/lync-2010-ipdns-workbook/</link>
      <pubDate>Sat, 23 Jun 2012 20:24:40 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/06/23/lync-2010-ipdns-workbook/</guid>
      <description>&lt;p&gt;I just ran across &lt;a href=&#34;http://blogs.technet.com/b/nexthop/archive/2011/12/07/useful-tips-for-testing-your-lync-edge-server.aspx&#34; title=&#34;Useful Tips For Testing Your Lync Edge Server&#34;&gt;a Lync article&lt;/a&gt; with all kinds of nice tables which distilled the myriad of DNS/IP addresses in a Lync deployment down to an easy to read format. I happen to have created one of these tables myself for a Lync deployment which included a standard Lync pool, XMPP gateway, Lync Mobility, and a single edge server. I figured others may find some use from it as it auto-populates the dns entries and what they are supposed to point to based on what you fill out for the highlighted cells. Sure you get some of this in the Lync Server 2010 Planning Tool but this offers a slightly different view of the environment as well as a nice one page overview.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>