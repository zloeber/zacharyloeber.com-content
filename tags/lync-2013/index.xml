<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lync 2013 on Zachary Loeber&#39;s Site</title>
    <link>https://zacharyloeber.com/tags/lync-2013/</link>
    <description>Recent content in Lync 2013 on Zachary Loeber&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 12 Sep 2015 20:05:26 +0000</lastBuildDate>
    
	<atom:link href="https://zacharyloeber.com/tags/lync-2013/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Skype For Business: Planning for Voice – Part 3</title>
      <link>https://zacharyloeber.com/blog/2015/09/12/skype-for-business-planning-for-voice-part-3/</link>
      <pubDate>Sat, 12 Sep 2015 20:05:26 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/09/12/skype-for-business-planning-for-voice-part-3/</guid>
      <description>&lt;p&gt;If you have been following along this series you already know the importance of getting a recent PSTN provider bill and performing an onsite visit. Next we will go into more depth on how the site PSTN is configured with your PBX at a site. There is lots of ground to cover so lets dive right in!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skype For Business: Planning for Voice – Part 1</title>
      <link>https://zacharyloeber.com/blog/2015/08/25/skype-for-business-planning-for-voice-part-1/</link>
      <pubDate>Tue, 25 Aug 2015 07:47:39 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/08/25/skype-for-business-planning-for-voice-part-1/</guid>
      <description>&lt;p&gt;When planning for a full Skype for Business voice deployment there are a number of elements which should be aligned and setup properly for a smooth transition. This is an introduction article for a series where I’ll provide some insight on what info you need to collect and understand for a successful PBX replacement within your organization.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync/S4B Client: Call Forwarding Options Compared</title>
      <link>https://zacharyloeber.com/blog/2015/05/01/lyncs4b-client-call-forwarding-options-compared/</link>
      <pubDate>Fri, 01 May 2015 19:00:48 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/05/01/lyncs4b-client-call-forwarding-options-compared/</guid>
      <description>&lt;p&gt;Here is a comparison chart I put together describing the different call forwarding options available to end users or their teams. This covers everything which can be setup by users in Lync as well as team calling (setup by the admin).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync 2013: Scripting QoS Config on Edge Servers</title>
      <link>https://zacharyloeber.com/blog/2015/04/04/lync-2013-scripting-qos-config-on-edge-servers/</link>
      <pubDate>Sat, 04 Apr 2015 21:41:51 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/04/04/lync-2013-scripting-qos-config-on-edge-servers/</guid>
      <description>&lt;p&gt;In many environments the Lync 2013 edge servers are configured in a standalone workgroup without any easy method for setting standard policies (such as GPOs). To make QoS configuration a bit less manual and error prone I&amp;#8217;ve put together this script which can be run in an administrative powershell prompt. It will update the NLA setting (or create it if it doesn&amp;#8217;t already exist), backup and prompt for removal any existing Qos settings, then import the registry settings for Audio, Video, and App QoS settings as defined in the script parameters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync Book Review: Lync Server Cookbook</title>
      <link>https://zacharyloeber.com/blog/2015/03/14/lync-book-review-lync-server-cookbook/</link>
      <pubDate>Sun, 15 Mar 2015 01:51:53 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/03/14/lync-book-review-lync-server-cookbook/</guid>
      <description>&lt;p&gt;I had planned to purchase this book at some point but instead was pleasantly surprised by an offer from one of the authors to provide an objective review of &amp;#8216;&lt;a href=&#34;http://www.amazon.com/Lync-Server-Cookbook-Fabrizio-Volpe-ebook/dp/B00SVBFBQS/ref=dp_kinw_strp_1&#34;&gt;Lync Server Cookbook&lt;/a&gt;&amp;#8216;! As I have worked with the product in some form since LCS/OCS days I believe I can speak with some authority on subject matter and readily agreed. With that being said, lets start with the book&amp;#8217;s overarching scope and structure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync Client: Automatic Fortune Cookie Utility</title>
      <link>https://zacharyloeber.com/blog/2015/02/08/lync-client-automatic-fortune-cookie-utility/</link>
      <pubDate>Sun, 08 Feb 2015 23:30:30 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/02/08/lync-client-automatic-fortune-cookie-utility/</guid>
      <description>&lt;p&gt;Here&amp;#8217;s a just for fun powershell script for the Lync user. In the not so old days of Unix administration it was not too uncommon to have a &amp;#8216;&lt;a href=&#34;http://en.wikipedia.org/wiki/Fortune_%28Unix%29&#34;&gt;fortune cookie&amp;#8217; display when logging into a system&lt;/a&gt;. I’ve always thought that it would be neat to have something similar in the Lync client that would allow for an easy rotation of your personal note field. Little did I realize how easy it would be to add such functionality myself with some powershell and the Lync SDK!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync: Local and Site-to-Site Dial Plan GUI Script</title>
      <link>https://zacharyloeber.com/blog/2015/01/12/lync-local-and-site-to-site-dial-plan-gui-script/</link>
      <pubDate>Tue, 13 Jan 2015 02:37:46 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2015/01/12/lync-local-and-site-to-site-dial-plan-gui-script/</guid>
      <description>&lt;p&gt;In a multiple, or even single, site VOIP deployment there are some  steps you can take to make life a whole lot easier on your end users. One of of the common features implemented across phone deployments (VoIP or otherwise) is site local and site-to-site dialing shortcuts. These shortcuts generally reduce the number of digits users have to dial to reach one another. In this post I&amp;#8217;ll go over how you might setup such a dial plan in Lync. First I&amp;#8217;ll go over how you might setup such a plan manually then I&amp;#8217;ll provide a GUI tool to do the same thing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Powershell: Check For Misplaced Certificates</title>
      <link>https://zacharyloeber.com/blog/2014/12/10/powershell-check-for-misplaced-certificates/</link>
      <pubDate>Thu, 11 Dec 2014 03:02:28 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/12/10/powershell-check-for-misplaced-certificates/</guid>
      <description>&lt;p&gt;Here is a script I absentmindedly put together one evening while power watching a TV series on Netflix with the wife. The general idea of this script is to check local machine, trusted root, and intermediate trusted root stores for misplaced or duplicate certificates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync: Voice Route Diagram Creation Script</title>
      <link>https://zacharyloeber.com/blog/2014/12/02/lync-voice-route-diagram-creation-script/</link>
      <pubDate>Tue, 02 Dec 2014 18:11:31 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/12/02/lync-voice-route-diagram-creation-script/</guid>
      <description>&lt;p&gt;Lync voice routing boils down to three basic components working in concert to decide call flow. It seems quite simple on paper, you assign voice policies which determine call routes based on PSTN usages (often called the &amp;#8216;glue&amp;#8217;). After looking at Lync voice routing way too many times I finally caved into producing a script to create diagrams of the things over the Thanksgiving holiday weekend.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync UCS Contacts Reporting with Powershell</title>
      <link>https://zacharyloeber.com/blog/2014/11/21/lync-ucs-contacts-reporting-with-powershell/</link>
      <pubDate>Fri, 21 Nov 2014 17:37:30 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/11/21/lync-ucs-contacts-reporting-with-powershell/</guid>
      <description>By default a Lync enabled account within a Lync/Exchange 2013 environment will be enabled for UCS (Unified Contact Store). This means that the Lync contacts get saved in the Lync user&amp;#8217;s mailbox and not the Lync database. In order to get a list of the contacts associated with these accounts you have to export data to a zip file with some debug Lync commands and, even then, the information is buried in a hard to interpret XML file.</description>
    </item>
    
    <item>
      <title>Lync and UM Correlation with Powershell</title>
      <link>https://zacharyloeber.com/blog/2014/11/13/lync-and-um-correlation-with-powershell/</link>
      <pubDate>Fri, 14 Nov 2014 03:31:13 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/11/13/lync-and-um-correlation-with-powershell/</guid>
      <description>I&amp;#8217;ve been working on an Exchange/Lync voice deployment lately and have found a new level of frustration for the lack of connectivity between the several voice components involved in turning up such a solution. That being said it is not very difficult to validate your deployment with a bit of Powershell.
There are a few necessary results to gather where I believe it can be easy to &amp;#8216;miss&amp;#8217; configuration steps when turning up or disabling users:</description>
    </item>
    
    <item>
      <title>PS Quickie: New-PIN</title>
      <link>https://zacharyloeber.com/blog/2014/10/09/ps-quickie-new-pin/</link>
      <pubDate>Fri, 10 Oct 2014 01:09:09 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/10/09/ps-quickie-new-pin/</guid>
      <description>Setting a bunch of PINs for Lync devices is not difficult at all. Here is a script to pre-generate them should you find the need to do so. The function simply generates random digits between 0 and 9 and convert to a string. An exception is made for the first digit (as zeros are often not displayed in csv files when opened in excel) and only digits 1-9 are used.</description>
    </item>
    
    <item>
      <title>Lync 2013: The Many QoS Settings</title>
      <link>https://zacharyloeber.com/blog/2014/06/01/lync-2013-the-many-qos-settings/</link>
      <pubDate>Sun, 01 Jun 2014 15:13:00 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2014/06/01/lync-2013-the-many-qos-settings/</guid>
      <description>&lt;p&gt;There are more than a few QoS settings in Lync 2013. Here is a script which should gather most of them in a human readable format for your convenience.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lync 2013: Monitoring Mirrored SQL Databases With PowerShell</title>
      <link>https://zacharyloeber.com/blog/2013/11/25/lync-2013-monitoring-mirrored-sql-databases-with-powershell/</link>
      <pubDate>Mon, 25 Nov 2013 18:16:24 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/11/25/lync-2013-monitoring-mirrored-sql-databases-with-powershell/</guid>
      <description>&lt;p&gt;In Lync 2013 you are given a powerful new backend redundancy option for your important databases in the form of SQL mirroring. In this article I’ll discuss which services are able to be mirrored, the databases they encompass, and provide a PowerShell script to generate a report on the database mirror status. I also threw in Lync CMS replication and service status sections because it is the civil thing to do&amp;#8230;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>