<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monitoring on </title>
    <link>https://zacharyloeber.com/tags/monitoring/</link>
    <description>Recent content in Monitoring on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 25 Nov 2013 18:16:24 +0000</lastBuildDate>
    
	<atom:link href="https://zacharyloeber.com/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lync 2013: Monitoring Mirrored SQL Databases With PowerShell</title>
      <link>https://zacharyloeber.com/blog/2013/11/25/lync-2013-monitoring-mirrored-sql-databases-with-powershell/</link>
      <pubDate>Mon, 25 Nov 2013 18:16:24 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/11/25/lync-2013-monitoring-mirrored-sql-databases-with-powershell/</guid>
      <description>&lt;p&gt;In Lync 2013 you are given a powerful new backend redundancy option for your important databases in the form of SQL mirroring. In this article I’ll discuss which services are able to be mirrored, the databases they encompass, and provide a PowerShell script to generate a report on the database mirror status. I also threw in Lync CMS replication and service status sections because it is the civil thing to do&amp;#8230;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Get Remote Shadow Volume Information With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/14/get-remote-shadow-volume-information-with-powershell/</link>
      <pubDate>Sun, 15 Sep 2013 02:57:55 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/14/get-remote-shadow-volume-information-with-powershell/</guid>
      <description>&lt;p&gt;Gather the remote shadow volume information for one or more systems using wmi, alternate credentials, and multiple runspaces. Function supports custom timeout parameters in case of wmi problems and returns shadow volume information, shadow copies, their providers, and settings. You can view verbose information on each runspace thread in realtime with the -Verbose option.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Excel and HTML Asset Reports With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/09/08/excel-and-html-asset-reports-with-powershell/</link>
      <pubDate>Sun, 08 Sep 2013 05:07:29 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/09/08/excel-and-html-asset-reports-with-powershell/</guid>
      <description>&lt;p&gt;This set of powershell functions collates and generates reports upon system information it gathers. Information gathered includes hardware health, system information, networking information and much much more. Multiple types of html reports can be generated and all data can be exported directly to an excel workbook, saved as individual reports, and emailed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Multithreaded System Asset Gathering with Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/08/05/multithreaded-system-asset-gathering-with-powershell/</link>
      <pubDate>Mon, 05 Aug 2013 17:35:31 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/08/05/multithreaded-system-asset-gathering-with-powershell/</guid>
      <description>&lt;p&gt;This function gathers a plethora of useful system information via WMI and multithreading with powershell.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enhanced Remote Server Connectivity Testing With Powershell</title>
      <link>https://zacharyloeber.com/blog/2013/06/25/enhanced-remote-server-connectivity-testing-with-powershell/</link>
      <pubDate>Tue, 25 Jun 2013 14:22:18 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/06/25/enhanced-remote-server-connectivity-testing-with-powershell/</guid>
      <description>&lt;p&gt;Test the following connectivity methods to a server: RDP, ping, rpc, wsman, sccm agent, scom agent, and remote registry. Optionally an alternate credential can be used. Versatility is added with options to return only true/false when singular tests are performed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Powershell to Gather Disk/Partition/Mount Point Information</title>
      <link>https://zacharyloeber.com/blog/2013/06/23/use-powershell-to-gather-diskpartitionmount-point-information/</link>
      <pubDate>Mon, 24 Jun 2013 04:41:01 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2013/06/23/use-powershell-to-gather-diskpartitionmount-point-information/</guid>
      <description>&lt;p&gt;I put together a function for remotely gathering Windows disk information. This was specifically written to accommodate alternate credentials. This script also accounts for the glaring disconnect between win32_Volume and win32_DiskDrive within WMI.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create Your Own Network Assessment Appliance: Additional Tools</title>
      <link>https://zacharyloeber.com/blog/2012/11/28/create-your-own-network-assessment-appliance-additional-tools/</link>
      <pubDate>Thu, 29 Nov 2012 02:24:46 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/11/28/create-your-own-network-assessment-appliance-additional-tools/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;I &lt;a href=&#34;https://zacharyloeber.com/2012/04/08/create-your-own-network-assessment-appliance/&#34; title=&#34;Create your own network assessment appliance&#34;&gt;previously did a write up&lt;/a&gt; on a personal virtual machine I like to keep at hand for performing network analysis and discovery. I&amp;#8217;ve since added a few tools to the VM and documented how they were installed so I figured I&amp;#8217;d share on how it was done. Even if you don&amp;#8217;t setup everything in this post it may be worthwhile to glance through it for some network engineering tools which are free to setup and use but not highly publicized. Anyone who cares to read this post has likely heard of Solarwinds but I highly doubt you have heard of all the tools in this list (let alone how to set them up). Regardless, I&amp;#8217;ll start with a tool anyone worth their salt has heard of though, Cacti&amp;#8230;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exchange 2010: Poor Man’s Monitoring</title>
      <link>https://zacharyloeber.com/blog/2012/07/22/exchange-2010-poor-mans-monitoring/</link>
      <pubDate>Sun, 22 Jul 2012 20:11:16 +0000</pubDate>
      
      <guid>https://zacharyloeber.com/blog/2012/07/22/exchange-2010-poor-mans-monitoring/</guid>
      <description>&lt;p&gt;I quietly released a new script into the wild the other day, Troubleshoot-MailboxServer.ps1. This script is meant for monitoring, fixing, and reporting on Exchange 2010 database servers. It pretty much just wraps around and reports on troubleshooting scripts found in %ExchangeInstallPath%Scripts. I also set it so you can have an email sent including warning/error color coded report upon completion.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>